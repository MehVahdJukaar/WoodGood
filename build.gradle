buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()

    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: "${project.forgegradle_version}", changing: true
        classpath "org.spongepowered:mixingradle:${project.mixingradle_version}"
        classpath "org.parchmentmc:librarian:${project.librarian_version}"
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'

mixin {
    add sourceSets.main, "${project.mod_id}.refmap.json"
}


archivesBaseName = project.mod_id
version = "${project.minecraft_version}-${project.mod_version}".toString()
group = "${project.maven_group}.${archivesBaseName}".toString()

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '17' // Need this here so eclipse task generates correctly.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {

    if(project.parchment_enabled == "true"){
        mappings channel: 'parchment', version: "${project.parchment_version}-${project.minecraft_version}"
    }else{
        mappings channel: 'official', version: "${project.minecraft_version}"
    }

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {

            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            property 'mixin.env.remapRefMap', 'true'
            arg "-mixin.config=${project.mod_id}.mixins.json".toString()

            jvmArg '-Xmx7G'

            workingDirectory project.file('run')

            // Recommendedo logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            property 'mixin.env.remapRefMap', 'true'
            arg "-mixin.config=${project.mod_id}.mixins.json".toString()

            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        data {

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', "${project.mod_id}", '--all', '--output', file('src/generated/resources/'), '--existing', sourceSets.main.resources.srcDirs[0]   //args "--mod", "usefulbackpacks", "--all", "--output", "\"" + file("src/generated/resources").toString() + "\"", "--validate", "--existing", "\"" + sourceSets.main.resources.srcDirs[0] + "\""

        }
    }
}


// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": "${projectDir}",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "${project.mod_id}.mixins.json"
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
            allowInsecureProtocol = true
        }
    }
}

dependencies {

    minecraft "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

        // Dependencies
    implementation fg.deobf("curse.maven:flywheel-486392:4341461") // Create
    implementation fg.deobf("curse.maven:autoreglib-250363:3642382")
    implementation fg.deobf("curse.maven:supermartijn642s-config-lib-438332:4629792") // Benched
    implementation fg.deobf("curse.maven:supermartijn642s-core-lib-454372:4654024") // Benched
    implementation fg.deobf("curse.maven:ortuslib-616457:3768197")
    implementation fg.deobf("curse.maven:geckolib-388172:4215249") // Graveyard
//    implementation fg.deobf("curse.maven:selene-499980:4668166")
    implementation fg.deobf("curse.maven:blueprint-382216:3991478") // Woodworks
    implementation fg.deobf("curse.maven:configured-457570:4462832")

        // Main
    implementation fg.deobf("curse.maven:another-furniture-610492:4034013")
    implementation fg.deobf("curse.maven:architects-palette-433862:4498424")
    implementation fg.deobf("curse.maven:backpacked-352835:4480722")
    implementation fg.deobf("curse.maven:camp-chair-531744:3548494")
    implementation fg.deobf("curse.maven:create-328085:4625533")
    implementation fg.deobf("curse.maven:crimson-nbt-tags-445260:3670163")
    implementation fg.deobf("curse.maven:curios-309927:4590652")
    implementation fg.deobf("curse.maven:decorativeblocks-362528:3965454")
    implementation fg.deobf("curse.maven:farmersdelight-398521:4636009")
    implementation fg.deobf("curse.maven:infinity-buttons-661902:4075885")
    implementation fg.deobf("curse.maven:jei-238222:4593548")
    implementation fg.deobf("curse.maven:malum-484064:4631612")
    implementation fg.deobf("curse.maven:marg-324494:3723497")
    implementation fg.deobf("curse.maven:missing-wilds-forge-634277:3835403")
    implementation fg.deobf("curse.maven:mrcrayfish-furniture-mod-55438:4374992")
    implementation fg.deobf("curse.maven:project-brazier-238326:3836169")
    implementation fg.deobf("curse.maven:quark-243121:3840125")
    implementation fg.deobf("curse.maven:texture-dump-319039:3573998")
    implementation fg.deobf("curse.maven:the-twilight-forest-227639:4337390")
    implementation fg.deobf("curse.maven:the-graveyard-forge-531188:4555245")
    implementation fg.deobf("curse.maven:twigs-496913:3968055")
    implementation fg.deobf("curse.maven:valhelsia-core-416935:3886212")
    implementation fg.deobf("curse.maven:valhelsia-structures-347488:3708292")
    implementation fg.deobf("curse.maven:workshop-for-handsome-adventurer-875843:4688655")


        // Macaw's
    implementation fg.deobf("curse.maven:macaws-bridges-351725:4599796")
    implementation fg.deobf("curse.maven:macaws-doors-378646:4649903")
    implementation fg.deobf("curse.maven:macaws-fences-and-walls-453925:4204541")
    implementation fg.deobf("curse.maven:macaws-lights-and-lamps-502372:4618176")
    implementation fg.deobf("curse.maven:macaws-paths-and-pavings-629153:4585113")
    implementation fg.deobf("curse.maven:macaws-trapdoors-400933:4608577")
    implementation fg.deobf("curse.maven:macaws-windows-363569:4203418")
    implementation fg.deobf("curse.maven:macaws-furniture-359540:4419007")
    implementation fg.deobf("curse.maven:macaws-roofs-352039:4590024")

        //TODO: CURRENTLY TESTING \\
    implementation fg.deobf("curse.maven:builders-delight-forge-563734:3857874")
    implementation fg.deobf("curse.maven:mosaic-carpentry-690226:4071275") // PORTED FROM 1.19.2
    implementation fg.deobf("curse.maven:lauchs-shutters-714019:4492153")  // PORTED FROM 1.19.2
    implementation fg.deobf("curse.maven:dramatic-doors-380617:4511658")  // PORTED FROM 1.19.2
    implementation fg.deobf("curse.maven:premium-wood-353515:3781130")  // PORTED FROM 1.19.2
    implementation fg.deobf("curse.maven:xercamod-341575:4318574")  // PORTED FROM 1.19.2
    implementation fg.deobf("curse.maven:productivebees-377897:4257307")  // PORTED FROM 1.19.2
    implementation fg.deobf("curse.maven:buildersaddition-389697:3682212")  // PORTED FROM 1.19.2
    implementation fg.deobf("curse.maven:woodworks-543610:4396956")  // PORTED FROM 1.19.2

        //TODO: NOT ADDED YET \\
//    implementation fg.deobf("curse.maven:functional-storage-556861:4324179") // storage-drawers' alternative
//    implementation fg.deobf("curse.maven:exlines-bark-carpets-527296:3776832")
//    implementation fg.deobf("curse.maven:just-a-raft-mod-274350:3765601")
//    implementation fg.deobf("curse.maven:i-like-wood-324164:3726545")
//    implementation fg.deobf("curse.maven:just-a-raft-mod-274350:3765601")
//    implementation fg.deobf("curse.maven:floor-mats-413140:3671760")
    // Market Crates is included in Mods folder
    // Iron Age Furniture is included in Mods folder

        // NOT FULLY WORKING PROPERLY \\
    implementation fg.deobf("curse.maven:storage-drawers-223852:3807626")
//    implementation fg.deobf("curse.maven:benched-417063:4291393")

    // Others
    implementation fg.deobf("com.tterrag.registrate:Registrate:MC1.18.2-1.1.3")

    annotationProcessor "org.spongepowered:mixin:${project.mixin_version}:processor"
}

repositories {
    maven {
        url = "https://www.cursemaven.com"
        allowInsecureProtocol = true
    }
    maven { // Registrate
        url "http://maven.tterrag.com/"
        allowInsecureProtocol = true

    }
}

// Loads files in the format {modid}-{version}.jar, MC version optional but picky about hyphens.
// See the regex pattern.
def getModVersion(filename) {
    // println(filename);
    def pattern = /^(?<modid>[^-]+)(?:-(?<mcversion>[0-9.]+))?(?:-(?<modver>[0-9.\-]+))\.jar$/;

    def matcher = filename =~ pattern

    def found = matcher.find()

    if(found) {
        def mod = matcher.group("modid");

        // Extract MC version or default
        def mcVersion = matcher.group("mcversion");

        // Extract mod version
        def version = matcher.group("modver");

        // println("> mod: ${mod}; mc: ${mcVersion}; version: ${version}");

        if(mcVersion == null)
            return "${mod}:${mod}:${version}";
        else
            return "${mod}:${mod}-${mcVersion}:${version}";

    } else {
        println(" > not a mod filename")
        return filename;
    }
}

def dev_mods_dir = "mods"

def dev_mods = fileTree(dev_mods_dir).filter { it -> it.isFile() }.files.name.collect( { getModVersion(it) } )

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }


dependencies{
    // Deobfuscate each dev mod for runtime
    dev_mods.each {
        compileOnly fg.deobf(it)
        runtimeOnly fg.deobf(it)
    }

    implementation 'org.jetbrains:annotations:22.0.0'
}

repositories{
    // Built mods
    flatDir {
        dirs dev_mods_dir
    }
    mavenCentral()
}